// <auto-generated />
using System;
using Fragment.NetSlum.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fragment.NetSlum.Persistence.Migrations
{
    [DbContext(typeof(FragmentContext))]
    [Migration("20230502023628_InitialTest")]
    partial class InitialTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("character_name")
                        .UseCollation("sjis_japanese_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CharacterName"), "sjis");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("class");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int")
                        .HasColumnName("current_level");

                    b.Property<uint>("FullModelId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("full_model_id");

                    b.Property<string>("GreetingMessage")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("greeting_message")
                        .UseCollation("sjis_japanese_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("GreetingMessage"), "sjis");

                    b.Property<int>("PlayerAccountId")
                        .HasColumnType("int")
                        .HasColumnName("player_account_id");

                    b.Property<byte>("SaveSlotId")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("save_slot_id");

                    b.HasKey("Id")
                        .HasName("pk_characters");

                    b.HasIndex("PlayerAccountId")
                        .HasDatabaseName("ix_characters_player_account_id");

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.CharacterStatHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AverageFieldLevel")
                        .HasColumnType("int")
                        .HasColumnName("average_field_level");

                    b.Property<int>("BronzeAmount")
                        .HasColumnType("int")
                        .HasColumnName("bronze_amount");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("character_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<uint>("CurrentGp")
                        .HasColumnType("int unsigned")
                        .HasColumnName("current_gp");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("int")
                        .HasColumnName("current_hp");

                    b.Property<int>("CurrentSp")
                        .HasColumnType("int")
                        .HasColumnName("current_sp");

                    b.Property<int>("GoldAmount")
                        .HasColumnType("int")
                        .HasColumnName("gold_amount");

                    b.Property<int>("OnlineTreasures")
                        .HasColumnType("int")
                        .HasColumnName("online_treasures");

                    b.Property<int>("SilverAmount")
                        .HasColumnType("int")
                        .HasColumnName("silver_amount");

                    b.HasKey("Id")
                        .HasName("pk_character_stat_history");

                    b.HasIndex("CharacterId")
                        .HasDatabaseName("ix_character_stat_history_character_id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_character_stat_history_created_at");

                    b.ToTable("character_stat_history", (string)null);
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.CharacterStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AverageFieldLevel")
                        .HasColumnType("int")
                        .HasColumnName("average_field_level");

                    b.Property<int>("BronzeAmount")
                        .HasColumnType("int")
                        .HasColumnName("bronze_amount");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("character_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<uint>("CurrentGp")
                        .HasColumnType("int unsigned")
                        .HasColumnName("current_gp");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("int")
                        .HasColumnName("current_hp");

                    b.Property<int>("CurrentSp")
                        .HasColumnType("int")
                        .HasColumnName("current_sp");

                    b.Property<int>("GoldAmount")
                        .HasColumnType("int")
                        .HasColumnName("gold_amount");

                    b.Property<int>("OnlineTreasures")
                        .HasColumnType("int")
                        .HasColumnName("online_treasures");

                    b.Property<int>("SilverAmount")
                        .HasColumnType("int")
                        .HasColumnName("silver_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_character_stats");

                    b.HasIndex("CharacterId")
                        .IsUnique()
                        .HasDatabaseName("ix_character_stats_character_id");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("ix_character_stats_updated_at");

                    b.ToTable("character_stats", (string)null);
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.PlayerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("SaveId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("save_id");

                    b.HasKey("Id")
                        .HasName("pk_player_accounts");

                    b.HasIndex("SaveId")
                        .HasDatabaseName("ix_player_accounts_save_id");

                    b.ToTable("player_accounts", (string)null);
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.Character", b =>
                {
                    b.HasOne("Fragment.NetSlum.Persistence.Entities.PlayerAccount", "PlayerAccount")
                        .WithMany()
                        .HasForeignKey("PlayerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_player_accounts_player_account_id");

                    b.Navigation("PlayerAccount");
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.CharacterStatHistory", b =>
                {
                    b.HasOne("Fragment.NetSlum.Persistence.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_character_stat_history_characters_character_id");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.CharacterStats", b =>
                {
                    b.HasOne("Fragment.NetSlum.Persistence.Entities.Character", "Character")
                        .WithOne("CharacterStats")
                        .HasForeignKey("Fragment.NetSlum.Persistence.Entities.CharacterStats", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_character_stats_characters_character_id");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Fragment.NetSlum.Persistence.Entities.Character", b =>
                {
                    b.Navigation("CharacterStats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
